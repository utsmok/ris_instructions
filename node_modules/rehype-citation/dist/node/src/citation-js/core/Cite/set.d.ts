/**
 * Add an object to the array of objects
 *
 * @memberof module:@citation-js/core.Cite#
 *
 * @param {module:@citation-js/core~InputData} data - The data to add to your object
 * @param {module:@citation-js/core~InputOptions} [options] - Options
 * @param {Boolean} [log=false] - Show this call in the log
 *
 * @return {module:@citation-js/core.Cite} The updated parent object
 */
export function add(data: any, options?: any, log?: boolean): any;
/**
 * Add an object to the array of objects
 *
 * @memberof module:@citation-js/core.Cite#
 *
 * @param {module:@citation-js/core~InputData} data - The data to add to your object
 * @param {module:@citation-js/core~InputOptions} [options] - Options
 * @param {Boolean} [log=false] - Show this call in the log
 *
 * @return {Promise<module:@citation-js/core.Cite>} The updated parent object
 */
export function addAsync(data: any, options?: any, log?: boolean): Promise<NodeModule>;
/**
 * Recreate a `Cite` object with almost any kind of data, and manipulate it with its default methods.
 *
 * @memberof module:@citation-js/core.Cite#
 *
 * @param {module:@citation-js/core~InputData} data - Replacement data
 * @param {module:@citation-js/core~InputOptions} [options] - Options
 * @param {Boolean} [log=false] - Show this call in the log
 *
 * @return {module:@citation-js/core.Cite} The updated parent object
 */
export function set(data: any, options?: any, log?: boolean): any;
export class set {
    /**
     * Recreate a `Cite` object with almost any kind of data, and manipulate it with its default methods.
     *
     * @memberof module:@citation-js/core.Cite#
     *
     * @param {module:@citation-js/core~InputData} data - Replacement data
     * @param {module:@citation-js/core~InputOptions} [options] - Options
     * @param {Boolean} [log=false] - Show this call in the log
     *
     * @return {module:@citation-js/core.Cite} The updated parent object
     */
    constructor(data: any, options?: any, log?: boolean);
    data: any[];
}
/**
 * Recreate a `Cite` object with almost any kind of data, and manipulate it with its default methods.
 *
 * @memberof module:@citation-js/core.Cite#
 *
 * @param {module:@citation-js/core~InputData} data - Replacement data
 * @param {module:@citation-js/core~InputOptions} [options] - Options
 * @param {Boolean} [log=false] - Show this call in the log
 *
 * @return {Promise<module:@citation-js/core.Cite>} The updated parent object
 */
export function setAsync(data: any, options?: any, log?: boolean): Promise<NodeModule>;
export class setAsync {
    /**
     * Recreate a `Cite` object with almost any kind of data, and manipulate it with its default methods.
     *
     * @memberof module:@citation-js/core.Cite#
     *
     * @param {module:@citation-js/core~InputData} data - Replacement data
     * @param {module:@citation-js/core~InputOptions} [options] - Options
     * @param {Boolean} [log=false] - Show this call in the log
     *
     * @return {Promise<module:@citation-js/core.Cite>} The updated parent object
     */
    constructor(data: any, options?: any, log?: boolean);
    data: any[];
}
/**
 * Reset a `Cite` object.
 *
 * @memberof module:@citation-js/core.Cite#
 *
 * @param {Boolean} [log=false] - Show this call in the log
 *
 * @return {module:@citation-js/core.Cite} The updated, empty parent object (except the log, the log lives)
 */
export function reset(log?: boolean): any;
export class reset {
    /**
     * Reset a `Cite` object.
     *
     * @memberof module:@citation-js/core.Cite#
     *
     * @param {Boolean} [log=false] - Show this call in the log
     *
     * @return {module:@citation-js/core.Cite} The updated, empty parent object (except the log, the log lives)
     */
    constructor(log?: boolean);
    data: any[];
    _options: {};
}
