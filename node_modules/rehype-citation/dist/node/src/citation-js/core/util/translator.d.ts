/**
 * :@citation-js/core.util.Translator~statement
 */
export type module = {
    /**
     * - properties to source value from
     */
    source?: string | Array<string>;
    /**
     * - properties the value should go to
     */
    target?: string | Array<string>;
    /**
     * - convert serialized or nested values
     */
    convert?: {
        toTarget?: any;
        toSource?: any;
    };
    /**
     * - conditions as to when this statement should apply
     */
    when?: {
        source?: any;
        target?: any;
    };
};
/**
 * @memberof module:@citation-js/core.util
 *
 * @param {Array<module:@citation-js/core.util.Translator~statement>} props
 *
 * @todo proper merging (?)
 * @todo 'else' conditions
 */
export class Translator {
    constructor(props: any);
    /**
     * @type {module:@citation-js/core.util.Translator~convert}
     */
    convertToSource: any;
    /**
     * @type {module:@citation-js/core.util.Translator~convert}
     */
    convertToTarget: any;
}
export namespace Translator {
    let CONVERT_TO_SOURCE: symbol;
    let CONVERT_TO_TARGET: symbol;
}
